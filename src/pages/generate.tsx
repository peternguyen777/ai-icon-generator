import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { FormGroup } from "~/components/formgroup";
import { Input } from "~/components/input";
import { api } from "../utils/api";
import { Button } from "~/components/button";

const COLORS = [
  "blue",
  "red",
  "pink",
  "green",
  "orange",
  "yellow",
  "white",
  "black",
];

const GeneratePage: NextPage = () => {
  const [form, setForm] = useState({ prompt: "", color: "" });
  const [imageUrl, setImageUrl] = useState<string | undefined>();

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess: (data) => {
      setImageUrl(data.imageUrl);
    },
  });

  function handleFormSubmit(e: React.FormEvent) {
    e.preventDefault();
    generateIcon.mutate(form);
    setForm({ prompt: "", color: "" });
  }

  function updateForm(key: string) {
    return (e: React.ChangeEvent<HTMLInputElement>) =>
      setForm((prev) => ({ ...prev, [key]: e.target.value }));
  }

  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-24 flex min-h-screen flex-col px-8">
        <h1 className="text-6xl">Generate your icon</h1>
        <p className="mb-12 text-2xl">
          Fill out the form below to start generating your icons.
        </p>
        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
          <h2 className="text-xl">
            1. Describe what you want your icon to look like.
          </h2>
          <FormGroup className="mb-12">
            <label>Prompt</label>
            <Input value={form.prompt} onChange={updateForm("prompt")} />
          </FormGroup>
          <h2 className="text-xl">2. Pick your icon color.</h2>
          <FormGroup className="mb-12 grid grid-cols-4">
            {COLORS.map((color) => (
              <label key={color} className="flex gap-2 text-2xl">
                <input
                  type="radio"
                  name="color"
                  value={color}
                  onChange={() => setForm((prev) => ({ ...prev, color }))}
                />
                {color}
              </label>
            ))}
          </FormGroup>
          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
          >
            Submit
          </Button>
        </form>
        {imageUrl && (
          <>
            <h2 className="text-xl">Your Icons</h2>
            <section className="mb-12 grid grid-cols-4 gap-4">
              <Image
                alt="an image of generated prompt"
                src={imageUrl}
                width={500}
                height={500}
              />
            </section>
          </>
        )}
      </main>
    </>
  );
};

export default GeneratePage;
